/***********************************************************************
This file is generated by: Vczh Parser Generator
From parser definition:File
Licensed under https://github.com/vczh-libraries/License
***********************************************************************/

#include "PrefixMerge9_PmLoopFile_Json.h"

namespace prefixmerge9_pmloop::json_visitor
{
	void FileVisitor::PrintFields(ClassItem* node)
	{
	}
	void FileVisitor::PrintFields(ClassQuestionItem* node)
	{
	}
	void FileVisitor::PrintFields(File* node)
	{
		BeginField(vl::WString::Unmanaged(L"items"));
		BeginArray();
		for (auto&& listItem : node->items)
		{
			BeginArrayItem();
			Print(listItem.Obj());
			EndArrayItem();
		}
		EndArray();
		EndField();
	}
	void FileVisitor::PrintFields(IntCommaItem* node)
	{
	}
	void FileVisitor::PrintFields(IntDotItem* node)
	{
	}
	void FileVisitor::PrintFields(IntItem* node)
	{
	}
	void FileVisitor::PrintFields(IntQuestionItem* node)
	{
	}
	void FileVisitor::PrintFields(Item* node)
	{
	}
	void FileVisitor::PrintFields(ItemToResolve* node)
	{
		BeginField(vl::WString::Unmanaged(L"candidates"));
		BeginArray();
		for (auto&& listItem : node->candidates)
		{
			BeginArrayItem();
			Print(listItem.Obj());
			EndArrayItem();
		}
		EndArray();
		EndField();
	}
	void FileVisitor::PrintFields(QuestionItem* node)
	{
		BeginField(vl::WString::Unmanaged(L"item"));
		Print(node->item.Obj());
		EndField();
	}

	void FileVisitor::Visit(ItemToResolve* node)
	{
		if (!node)
		{
			WriteNull();
			return;
		}
		BeginObject();
		WriteType(vl::WString::Unmanaged(L"ItemToResolve"), node);
		PrintFields(static_cast<Item*>(node));
		PrintFields(static_cast<ItemToResolve*>(node));
		EndObject();
	}

	void FileVisitor::Visit(IntItem* node)
	{
		if (!node)
		{
			WriteNull();
			return;
		}
		BeginObject();
		WriteType(vl::WString::Unmanaged(L"IntItem"), node);
		PrintFields(static_cast<Item*>(node));
		PrintFields(static_cast<IntItem*>(node));
		EndObject();
	}

	void FileVisitor::Visit(IntCommaItem* node)
	{
		if (!node)
		{
			WriteNull();
			return;
		}
		BeginObject();
		WriteType(vl::WString::Unmanaged(L"IntCommaItem"), node);
		PrintFields(static_cast<Item*>(node));
		PrintFields(static_cast<IntCommaItem*>(node));
		EndObject();
	}

	void FileVisitor::Visit(IntDotItem* node)
	{
		if (!node)
		{
			WriteNull();
			return;
		}
		BeginObject();
		WriteType(vl::WString::Unmanaged(L"IntDotItem"), node);
		PrintFields(static_cast<Item*>(node));
		PrintFields(static_cast<IntDotItem*>(node));
		EndObject();
	}

	void FileVisitor::Visit(IntQuestionItem* node)
	{
		if (!node)
		{
			WriteNull();
			return;
		}
		BeginObject();
		WriteType(vl::WString::Unmanaged(L"IntQuestionItem"), node);
		PrintFields(static_cast<Item*>(node));
		PrintFields(static_cast<IntQuestionItem*>(node));
		EndObject();
	}

	void FileVisitor::Visit(ClassItem* node)
	{
		if (!node)
		{
			WriteNull();
			return;
		}
		BeginObject();
		WriteType(vl::WString::Unmanaged(L"ClassItem"), node);
		PrintFields(static_cast<Item*>(node));
		PrintFields(static_cast<ClassItem*>(node));
		EndObject();
	}

	void FileVisitor::Visit(ClassQuestionItem* node)
	{
		if (!node)
		{
			WriteNull();
			return;
		}
		BeginObject();
		WriteType(vl::WString::Unmanaged(L"ClassQuestionItem"), node);
		PrintFields(static_cast<Item*>(node));
		PrintFields(static_cast<ClassQuestionItem*>(node));
		EndObject();
	}

	void FileVisitor::Visit(QuestionItem* node)
	{
		if (!node)
		{
			WriteNull();
			return;
		}
		BeginObject();
		WriteType(vl::WString::Unmanaged(L"QuestionItem"), node);
		PrintFields(static_cast<Item*>(node));
		PrintFields(static_cast<QuestionItem*>(node));
		EndObject();
	}

	FileVisitor::FileVisitor(vl::stream::StreamWriter& _writer)
		: vl::glr::JsonVisitorBase(_writer)
	{
	}

	void FileVisitor::Print(Item* node)
	{
		if (!node)
		{
			WriteNull();
			return;
		}
		node->Accept(static_cast<Item::IVisitor*>(this));
	}

	void FileVisitor::Print(File* node)
	{
		if (!node)
		{
			WriteNull();
			return;
		}
		BeginObject();
		WriteType(vl::WString::Unmanaged(L"File"), node);
		PrintFields(static_cast<File*>(node));
		EndObject();
	}

}
